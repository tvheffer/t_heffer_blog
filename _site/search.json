[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/data_import/dummy_blog.html",
    "href": "posts/data_import/dummy_blog.html",
    "title": "Preparing data in R",
    "section": "",
    "text": "This post covers how to read in data, change data types, and index variables in a dataframe"
  },
  {
    "objectID": "posts/data_import/dummy_blog.html#read-in-data-to-r",
    "href": "posts/data_import/dummy_blog.html#read-in-data-to-r",
    "title": "Preparing data in R",
    "section": "Read in data to R",
    "text": "Read in data to R\nCSV File:\n\nsat_dat &lt;- read.csv(\"1_raw_data/workshop_data.csv\", header = TRUE)\n\nSPSS File:\n\nlibrary(haven) \ndata_spss &lt;- read_sav(\"1_raw_data/workshop_data.sav\")\n\nExcel File:\n\nlibrary(readxl)\ndata_xl &lt;- read_xlsx(\"1_raw_data/workshop_data.xlsx\")\n\nR data:\n.Rdata files store the structure of your variables. Once you finish with data wrangling, it is useful to save your dataset to an .Rdata file so that it maintains any edits (e.g., class of factor, re-leveling etc). Downside: you can only open it in R.\n\nsave(data, file = \"name_of_file.Rdata\")\nload(\"name_of_file.Rdata\") \n\nWhen you load this dataset back into r, it will be titled data in the environment"
  },
  {
    "objectID": "posts/data_import/dummy_blog.html#data-types",
    "href": "posts/data_import/dummy_blog.html#data-types",
    "title": "Preparing data in R",
    "section": "Data types",
    "text": "Data types\nGood Overview\nData frame: rows are the unit of observations, columns are the variables.\nInteger: as.integer(44.1) provides rounded values (44)\nNumeric: as.numeric(44.1) saves decimals (44.1)\nMatrix: can only store data that is all the same type\nCharacters: string- can use single or double quotes\nFactor: used to classify categorical data"
  },
  {
    "objectID": "posts/data_import/dummy_blog.html#re-level-a-variabl",
    "href": "posts/data_import/dummy_blog.html#re-level-a-variabl",
    "title": "Preparing data in R",
    "section": "Re-level a variabl",
    "text": "Re-level a variabl\nWhen you create a factor, the baseline category is alphabetical order, usually you want the control group as a baseline category\n\ndata$group &lt;- relevel(data$group, ref = \"control\")"
  },
  {
    "objectID": "posts/data_import/dummy_blog.html#indexing-extracting-elements-from-a-dataset",
    "href": "posts/data_import/dummy_blog.html#indexing-extracting-elements-from-a-dataset",
    "title": "Preparing data in R",
    "section": "Indexing (extracting elements from a dataset)",
    "text": "Indexing (extracting elements from a dataset)\nWhen indexing, the order is: [row,column]  dat_data[1,3] extract the value in row 1, column 3  dat_data[5,] extract all values in row 5 \nYou can also index multiple columns using c() stands for concatenate (or combine)\n\nvec1 &lt;- c(6, 77, 2333, 4, 8)\nvec1[c(2,3)]\n\n[1]   77 2333"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Taylor Heffer Blog posts",
    "section": "",
    "text": "Preparing data in R\n\n\n\n\n\n\n\nR\n\n\nData Wrangling\n\n\n\n\n\n\n\n\n\n\n\nJun 30, 2023\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJun 30, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJun 27, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/data_import/dummy_blog.html#inspect-data-types",
    "href": "posts/data_import/dummy_blog.html#inspect-data-types",
    "title": "Preparing data in R",
    "section": "Inspect data types",
    "text": "Inspect data types\nAfter you import data, it is necessary to check the structure of the data. \n\nstr(sat_dat)\n\nlibrary(dplyr)\nglimpse(sat_dat)\n\nclass(sat_dat$variable_name)"
  },
  {
    "objectID": "posts/data_import/dummy_blog.html#convert-data-types",
    "href": "posts/data_import/dummy_blog.html#convert-data-types",
    "title": "Preparing data in R",
    "section": "Convert data types",
    "text": "Convert data types\nIf you have a categorical variable that is classified as numeric, it is necessary you change this to a factor. If you leave it as numeric, R will assume it is a continuous variable. In other words, that category one is 1 unit smaller than category two, which of course is nonsense for nominal data. This is a critical step and will save you issues with plotting and analyses down the road!\nNominal variables (Factors): categories with no particular order (sex, gender, hair color, etc.) \n\ndata$sex &lt;- factor(data$sex, labels = c(\"males\", \"females\"))\n\nOrdinal variables: categories with order relations (grades, social status, etc.) \n\ndata$education &lt;- ordered(data$education)\n\n\nLikert items (e.g. ranging from 1 “completely disagree” to 5 “completely agree”) are sometimes a tricky data type. Technically they are ordinal and should be treated as such when they are a response variable. It makes our life easier to treat them as continuous when they are predictors. \n\nMetric scale level (aka numerical): distance relation between the values (income, IQ,SAT, age): - Ratio scale: natural 0 point (income, body height, etc.) - Interval scale: no natural 0 point (temperature Celsius, year, etc.)"
  },
  {
    "objectID": "posts/data_import/dummy_blog.html#re-leveling-a-variable",
    "href": "posts/data_import/dummy_blog.html#re-leveling-a-variable",
    "title": "Preparing data in R",
    "section": "Re-leveling a variable",
    "text": "Re-leveling a variable\nWhen you create a factor, the baseline category is alphabetical order, usually you want the control group as a baseline category. To change the levels, use the following command.\n\ndata$group &lt;- relevel(data$group, ref = \"control\")"
  }
]